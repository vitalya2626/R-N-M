{"version":3,"sources":["pictures/logo-RickAndMorty.svg","pictures/icon-RickAndMorty-NoSearchResults.svg","pictures/icon-RickAndMorty-folks.svg","components/Card/Card.js","components/RenderedCards/RenderedCards.js","pages/Main/Main.js","base/App.js","reportWebVitals.js","index.js"],"names":["Card","id","imgSrc","imgAlt","name","species","gender","status","location","episodeFirst","className","src","alt","href","RenderedCards","results","count","info","useState","next","setNext","items","setItems","loading","setLoading","noData","setNoData","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","getNextCharacters","endpoint","fetch","then","response","json","data","console","log","newItems","concat","length","catch","error","finally","map","character","index","image","episode","toString","icon","Main","setResults","sentQuery","setSentQuery","stringQuery","setStringQuery","useForm","register","handleSubmit","reset","api","getCharacters","useEffect","logo","onSubmit","characterName","query","templateQuery","type","placeholder","ref","value","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8296939d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-RickAndMorty.1bf564e5.svg\";","export default __webpack_public_path__ + \"static/media/icon-RickAndMorty-NoSearchResults.99a4b9fc.svg\";","export default __webpack_public_path__ + \"static/media/icon-RickAndMorty-folks.07b560ba.svg\";","import React from 'react';\nimport './Card.scss';\n\nconst Card = ({\n  id,\n  imgSrc,\n  imgAlt,\n  name,\n  species,\n  gender,\n  status,\n  location,\n  episodeFirst,\n}) => {\n  return (\n    <div className='card'>\n      <div className='card-image--wrapper'>\n        <img className='card-image' src={imgSrc} alt={imgAlt} />\n      </div>\n      <div className='card-body'>\n        <h2>\n          <span>#{id}</span> {name}\n        </h2>\n        <h3>\n          {status} - {species} - {gender}\n        </h3>\n        <p>Last known location:</p>\n        <p className='location'>{location}</p>\n        <p>First seen in:</p>\n        <a href={episodeFirst}>{episodeFirst}</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\n// Internal Stylesheets\nimport './RenderedCards.scss';\n// Assets\nimport icon from '../../pictures/icon-RickAndMorty-folks.svg';\nimport Card from '../Card/Card';\n\nconst RenderedCards = ({ results }) => {\n  const count = results.info.count;\n  const [next, setNext] = useState(results.info.next);\n  const [items, setItems] = useState(results.results);\n  const [loading, setLoading] = useState(false);\n  const [noData, setNoData] = useState(false);\n\n  window.onscroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      if (next != null) {\n        getNextCharacters(next);\n      } else {\n        setNoData(true);\n      }\n    }\n  };\n\n  const getNextCharacters = endpoint => {\n    setLoading(true);\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n        const newItems = items.concat(data.results);\n        setItems(newItems);\n        setNext(data.info.next);\n        if (data.length === 0) setNoData(true);\n        if (data.results.length < 20) setNoData(true);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <section className='rendered-cards'>\n      <div className='rendered-cards--header'>\n        <h3>Number of Results: {count}</h3>\n      </div>\n      <div className='rendered-cards--results'>\n        {items.map((character, index) => {\n          return (\n            <Card\n              key={index.toString()}\n              id={index + 1}\n              imgSrc={character.image}\n              imgAlt={character.name}\n              name={character.name}\n              status={character.status}\n              species={character.species}\n              gender={character.gender}\n              location={character.location.name}\n              episodeFirst={character.episode[0]}\n            />\n          );\n        })}\n      </div>\n      <div className='search-status'>\n        {loading ? <h3 className='search-status--message'>loading data ...</h3> : ''}\n        {noData | items.length < 20 \n        ? <img\n            className='search-status--icon'\n            src={icon}\n            alt='rick and morty no more results'\n          /> : ''}\n      </div>\n    </section>\n  );\n};\n\nexport default RenderedCards;\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport './Main.scss';\n\nimport logo from '../../pictures/logo-RickAndMorty.svg';\nimport icon from '../../pictures/icon-RickAndMorty-NoSearchResults.svg';\nimport RenderedCards from '../../components/RenderedCards/RenderedCards';\n\nconst Main = () => {\n  const [results, setResults] = useState(null);\n  const [noData, setNoData] = useState(null);\n  const [sentQuery, setSentQuery] = useState(false);\n  const [stringQuery, setStringQuery] = useState('');\n  const { register, handleSubmit, reset } = useForm();\n\n  const api = 'https://rickandmortyapi.com/api/character/';\n\n  const getCharacters = endpoint => {\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          console.error('Error:', data.error);\n          setNoData(true);\n          setResults('');\n        } else {\n          console.log('Success:', data);\n          setNoData(false);\n          setResults(data);\n          console.log(noData);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        setNoData(true);\n      });\n  };\n\n  useEffect(() => {\n    setResults(getCharacters(api));\n    // eslint-disable-next-line\n  }, []);\n\n  const onSubmit = data => {\n    if (!data.characterName && !data.status && !data.gender) {\n      setSentQuery(false);\n    } else {\n      setSentQuery(true);\n    }\n    const query = `${api}?name=${data.characterName}&status=${data.status}&gender=${data.gender}`;\n    setResults(getCharacters(query));\n    const templateQuery = `${data.characterName} ${data.status} ${data.gender}`;\n    setStringQuery(templateQuery);\n    reset();\n  };\n\n  return (\n    <section>\n      <section className='home-header'>\n        <div className='logos'>\n          <img\n            className='home-header--logo'\n            src={logo}\n            alt='rick and morty logo'\n          />\n        </div>\n        <div className='search-form'>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label className='form-label'>Name</label>\n            <input\n                className='form-field'\n                type='search'\n                placeholder='Search for a character'\n                name='characterName'\n                ref={register}>\n              </input>\n            <label className='form-label'>Status</label>\n            <select\n                className='form-field'\n                type='dropdown'\n                name='status'\n                ref={register}\n              >\n              <option value=''>None</option>\n              <option value='alive'>Alive</option>\n              <option value='dead'>Dead</option>\n              <option value='unknown'>Unknown</option>\n            </select>\n            <label className='form-label'>Gender</label>\n            <select\n                className='form-field'\n                type='dropdown'\n                name='gender'\n                ref={register}\n              >\n              <option value=''>None</option>\n              <option value='male'>Male</option>\n              <option value='female'>Female</option>\n              <option value='unknown'>Unknown</option>\n              <option value='genderless'>Genderless</option>\n            </select>    \n            <input\n              className='submit-button'\n              type='submit'\n              value='Submit'></input>\n          </form>\n        </div>\n      </section>\n      {sentQuery ? (\n        <div className='search-status'>\n          <h3 className='search-status--query'>Searched for: {stringQuery}</h3>\n        </div>\n      ) : (\n        ''\n      )}\n      {noData ? (\n        <div className='search-status'>\n          <h3 className='search-status--message'>No search results. Try again!</h3>\n          <img className='search-status--icon' src={icon} alt='rick and morty no search results' />\n        </div>\n      ) : (\n        ''\n      )}\n      {results ? <RenderedCards results={results} /> : ''}\n    </section>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './App.scss';\nimport Main from '../pages/Main/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './base/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}